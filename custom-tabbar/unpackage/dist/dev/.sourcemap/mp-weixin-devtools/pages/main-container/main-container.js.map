{"version":3,"names":["IndexPage","CategoryPage","CartPage","UserPage","selectedIndex","common_vendor","ref","showArrow","tabViewHeight","lastScrollTop","gifPlayStatus","tabConfig","iconPath","selectedIconPath","text","init","isSpecial","selectedIconEndFrame","gifDuration","tabList","getIconSrc","item","index","value","playStatus","handleGifPlayback","config","duration","__f__","concat","setTimeout","onMounted","initContainer","$on","onPageScrollEvent","onUnmounted","$off","_ref","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","wrap","_callee$","_context","prev","next","nextTick$1","createSelectorQuery","in","_this","select","boundingClientRect","data","height","exec","stop","apply","arguments","onTabClick","scrollToTop","previousIndex","includes","scrollTop","tab0","$refs","onPageScroll","event","_a","detail","wx","createPage","MiniProgramPage"],"sources":["main-container.vue","E:/apps/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbWFpbi1jb250YWluZXIvbWFpbi1jb250YWluZXIudnVl"],"sourcesContent":["<template>\r\n  <view class=\"main-container\">\r\n    <!-- 内容区域 -->\r\n    <view ref=\"tabView\" class=\"tab-view\">\r\n      <!-- 性能优化：首次使用v-if创建，后续使用visibility控制 -->\r\n      <!-- 首页 -->\r\n      <view \r\n        class=\"tab-page\"\r\n        v-if=\"tabList[0].init\"\r\n        :style=\"{ visibility: selectedIndex === 0 ? 'visible' : 'hidden' }\"\r\n      >\r\n        <IndexPage \r\n          ref=\"tab-0\"\r\n          @scroll=\"onPageScroll\"\r\n        />\r\n      </view>\r\n      \r\n      <!-- 热点页 -->\r\n      <view \r\n        class=\"tab-page\"\r\n        v-if=\"tabList[1].init\"\r\n        :style=\"{ visibility: selectedIndex === 1 ? 'visible' : 'hidden' }\"\r\n      >\r\n        <CategoryPage \r\n          ref=\"tab-1\"\r\n          @scroll=\"onPageScroll\"\r\n        />\r\n      </view>\r\n      \r\n      <!-- 聊天页 -->\r\n      <view \r\n        class=\"tab-page\"\r\n        v-if=\"tabList[2].init\"\r\n        :style=\"{ visibility: selectedIndex === 2 ? 'visible' : 'hidden' }\"\r\n      >\r\n        <CartPage \r\n          ref=\"tab-2\"\r\n          @scroll=\"onPageScroll\"\r\n        />\r\n      </view>\r\n      \r\n      <!-- 我的页 -->\r\n      <view \r\n        class=\"tab-page\"\r\n        v-if=\"tabList[3].init\"\r\n        :style=\"{ visibility: selectedIndex === 3 ? 'visible' : 'hidden' }\"\r\n      >\r\n        <UserPage \r\n          ref=\"tab-3\"\r\n          @scroll=\"onPageScroll\"\r\n        />\r\n      </view>\r\n    </view>\r\n    \r\n    <!-- 自定义底部导航栏 -->\r\n    <view ref=\"tabbar\" class=\"custom-tabbar\">\r\n      <!-- 导航项容器 -->\r\n      <view class=\"tabbar-content\">\r\n        <!-- 所有导航项 -->\r\n        <view \r\n          v-for=\"(item, index) in tabConfig\" \r\n          :key=\"index\"\r\n          class=\"tab-item\"\r\n          :class=\"{ active: selectedIndex === index }\"\r\n          @tap=\"onTabClick(index)\"\r\n        >\r\n          <!-- 特殊的AI图标 (Ai我) -->\r\n          <view \r\n            v-if=\"index === 0 && item.isSpecial\" \r\n            class=\"ai-special-container\"\r\n          >\r\n            <!-- 滚动箭头 -->\r\n            <text \r\n              v-if=\"showArrow\"\r\n              class=\"tab-icon arrow-icon\"\r\n              :class=\"{ active: selectedIndex === index }\"\r\n            >\r\n              ⬆️\r\n            </text>\r\n            <!-- AI图标容器 -->\r\n            <view v-else class=\"ai-icon-container\" :class=\"{ active: selectedIndex === index }\">\r\n              <!-- 选中时显示GIF -->\r\n              <image \r\n                v-if=\"selectedIndex === index\"\r\n                class=\"ai-gif-icon\"\r\n                :src=\"item.selectedIconPath\"\r\n                mode=\"aspectFit\"\r\n              />\r\n              <!-- 未选中时显示PNG -->\r\n              <image \r\n                v-else\r\n                class=\"ai-png-icon\"\r\n                :src=\"item.iconPath\"\r\n                mode=\"aspectFit\"\r\n              />\r\n            </view>\r\n            <!-- 文字标签 - 只在未选中时显示 -->\r\n            <text \r\n              v-if=\"!showArrow && selectedIndex !== index\"\r\n              class=\"tab-text\"\r\n              :class=\"{ active: selectedIndex === index }\"\r\n            >\r\n              {{ item.text }}\r\n            </text>\r\n          </view>\r\n          \r\n          <!-- 其他普通图标 -->\r\n          <template v-else>\r\n            <!-- 图标容器 -->\r\n            <view class=\"tab-icon-container\">\r\n              <image \r\n                class=\"tab-icon-image\"\r\n                :src=\"getIconSrc(item, index)\"\r\n                mode=\"aspectFit\"\r\n                :class=\"{ active: selectedIndex === index }\"\r\n                :key=\"`icon-${index}-${gifPlayStatus[index] || 'static'}`\"\r\n              />\r\n            </view>\r\n            <!-- 文字标签 -->\r\n            <text \r\n              class=\"tab-text\"\r\n              :class=\"{ active: selectedIndex === index }\"\r\n            >\r\n              {{ item.text }}\r\n            </text>\r\n          </template>\r\n        </view>\r\n      </view>\r\n      \r\n      \r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted, onUnmounted, nextTick } from 'vue'\r\n\r\n// 导入页面组件\r\nimport IndexPage from '@/pages/index/index.vue'\r\nimport CategoryPage from '@/pages/category/index.vue'\r\nimport CartPage from '@/pages/cart/index.vue'\r\nimport UserPage from '@/pages/user/index.vue'\r\n\r\n// 响应式数据\r\nconst selectedIndex = ref(0)\r\nconst showArrow = ref(false)\r\nconst tabViewHeight = ref(0)\r\nconst lastScrollTop = ref(0)\r\nconst gifPlayStatus = ref({}) // 记录每个tab的GIF播放状态\r\n\r\n// Tab配置 - 微信小程序兼容版本\r\nconst tabConfig = [\r\n  { \r\n    iconPath: '/static/tabbar/ai.png',\r\n    selectedIconPath: '/static/icons/ai-robot.gif', // AI使用GIF\r\n    text: 'Ai我',\r\n    init: true,\r\n    isSpecial: true  // 标记为特殊图标\r\n  },\r\n  { \r\n    iconPath: '/static/tabbar/hotspot.png',\r\n    selectedIconPath: '/static/icons/hotspot.gif', // 恢复使用GIF，确保显示正常\r\n    selectedIconEndFrame: '/static/icons/hotspot-end.png', // 最后一帧静态图\r\n    text: '热点',\r\n    init: false,\r\n    gifDuration: 240\r\n  },\r\n  { \r\n    iconPath: '/static/tabbar/chat.png',\r\n    selectedIconPath: '/static/icons/chat.gif', // 恢复使用GIF，确保显示正常\r\n    selectedIconEndFrame: '/static/icons/chat-end.png', // 最后一帧静态图\r\n    text: '聊天',\r\n    init: false,\r\n    gifDuration: 240\r\n  },\r\n  { \r\n    iconPath: '/static/tabbar/user.png',\r\n    selectedIconPath: '/static/icons/user.gif', // 恢复使用GIF，确保显示正常\r\n    selectedIconEndFrame: '/static/icons/user-end.png', // 最后一帧静态图\r\n    text: '我的',\r\n    init: false,\r\n    gifDuration: 240\r\n  }\r\n]\r\n\r\nconst tabList = ref(tabConfig)\r\n\r\n// 获取图标源路径\r\nconst getIconSrc = (item, index) => {\r\n  if (selectedIndex.value !== index) {\r\n    // 未选中时显示普通图标\r\n    return item.iconPath\r\n  }\r\n  \r\n  // 选中时的逻辑\r\n  if (index === 0) {\r\n    // AI特殊处理，直接返回GIF\r\n    return item.selectedIconPath\r\n  }\r\n  \r\n  // 其他tab的GIF控制逻辑\r\n  const playStatus = gifPlayStatus.value[index]\r\n  if (playStatus === 'playing') {\r\n    return item.selectedIconPath // 显示GIF\r\n  } else if (playStatus === 'ended') {\r\n    return item.selectedIconEndFrame || item.selectedIconPath // 显示最后一帧，如果没有则继续显示GIF\r\n  } else {\r\n    return item.selectedIconPath // 首次选中显示GIF\r\n  }\r\n}\r\n\r\n// 处理GIF播放\r\nconst handleGifPlayback = (index) => {\r\n  const config = tabConfig[index]\r\n  \r\n  // 每次切换都重新播放GIF\r\n  // 开始播放GIF\r\n  gifPlayStatus.value[index] = 'playing'\r\n  \r\n  // 使用配置中的自定义播放时长\r\n  const duration = config.gifDuration || 1000 // 默认1秒\r\n  \r\n  console.log(`🎬 ${config.text} GIF开始播放，时长: ${duration}ms`)\r\n  \r\n  // 只有配置了最后一帧图片才进行切换\r\n  if (config.selectedIconEndFrame) {\r\n    // 播放完成后切换到最后一帧\r\n    setTimeout(() => {\r\n      gifPlayStatus.value[index] = 'ended'\r\n      console.log(`🎯 ${config.text} GIF播放完成，显示最后一帧`)\r\n    }, duration)\r\n  }\r\n}\r\n\r\n// 重置所有GIF播放状态\r\nconst resetAllGifStatus = () => {\r\n  gifPlayStatus.value = {}\r\n  console.log('🔄 所有GIF播放状态已重置')\r\n}\r\n\r\n\r\n\r\n// 生命周期\r\nonMounted(() => {\r\n  initContainer()\r\n  // 监听页面滚动事件\r\n  uni.$on('pageScroll', onPageScrollEvent)\r\n})\r\n\r\nonUnmounted(() => {\r\n  uni.$off('pageScroll', onPageScrollEvent)\r\n})\r\n\r\n// 初始化容器\r\nconst initContainer = async () => {\r\n  await nextTick()\r\n  // 获取容器高度用于判断是否显示箭头\r\n  uni.createSelectorQuery().in(this).select('.tab-view').boundingClientRect((data) => {\r\n    if (data) {\r\n      tabViewHeight.value = data.height\r\n    }\r\n  }).exec()\r\n}\r\n\r\n// Tab点击处理\r\nconst onTabClick = (index) => {\r\n  console.log(`🔄 点击Tab: ${index}`)\r\n  \r\n  // 如果点击的是当前首页且显示箭头，则回到顶部\r\n  if (selectedIndex.value === index && index === 0 && showArrow.value) {\r\n    scrollToTop()\r\n    return\r\n  }\r\n  \r\n  // 如果点击的是同一个tab，不需要切换\r\n  if (selectedIndex.value === index) {\r\n    return\r\n  }\r\n  \r\n  const previousIndex = selectedIndex.value\r\n  \r\n  // 如果切换到非首页，隐藏箭头\r\n  if (index !== 0) {\r\n    showArrow.value = false\r\n  } else if (index === 0 && selectedIndex.value !== 0) {\r\n    // 切回首页时，根据之前的滚动位置决定是否显示箭头\r\n    showArrow.value = lastScrollTop.value > tabViewHeight.value\r\n  }\r\n  \r\n  // 重置前一个tab的GIF状态（除了AI tab）\r\n  if (previousIndex !== 0 && tabConfig[previousIndex].selectedIconPath.includes('.gif')) {\r\n    delete gifPlayStatus.value[previousIndex]\r\n  }\r\n  \r\n  // 懒加载：首次点击时初始化页面\r\n  if (!tabList.value[index].init) {\r\n    tabList.value[index].init = true\r\n  }\r\n  \r\n  selectedIndex.value = index\r\n  \r\n  // 控制GIF播放（除了AI tab）\r\n  if (index !== 0 && tabConfig[index].selectedIconPath.includes('.gif')) {\r\n    handleGifPlayback(index)\r\n  }\r\n}\r\n\r\n\r\n\r\n// 页面滚动事件处理\r\nconst onPageScrollEvent = (scrollTop) => {\r\n  if (selectedIndex.value === 0) { // 只有首页才处理滚动\r\n    showArrow.value = scrollTop > tabViewHeight.value\r\n    lastScrollTop.value = scrollTop\r\n  }\r\n}\r\n\r\n// 滚动到顶部\r\nconst scrollToTop = () => {\r\n  showArrow.value = false\r\n  // 通知首页滚动到顶部\r\n  const tab0 = this.$refs['tab-0']\r\n  if (tab0 && tab0[0] && typeof tab0[0].scrollToTop === 'function') {\r\n    tab0[0].scrollToTop()\r\n  }\r\n}\r\n\r\n\r\n// 页面滚动回调\r\nconst onPageScroll = (event) => {\r\n  if (selectedIndex.value === 0) {\r\n    onPageScrollEvent(event.detail?.scrollTop || 0)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 导入图标字体 */\r\n@import url('/static/fonts/uni-icon.css');\r\n\r\n/* 主容器 */\r\n.main-container {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: #fff;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n/* 内容区域 */\r\n.tab-view {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 160rpx; /* 为底部TabBar留出空间 */\r\n  overflow: hidden;\r\n  /* #ifdef APP-PLUS || MP */\r\n  bottom: calc(160rpx + env(safe-area-inset-bottom));\r\n  /* #endif */\r\n}\r\n\r\n.tab-page {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #fff;\r\n}\r\n\r\n/* 自定义底部导航栏 */\r\n.custom-tabbar {\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 160rpx;\r\n  z-index: 1000;\r\n  background-color: #ffffff;\r\n  border-top: 1rpx solid #e5e5e5;\r\n  box-shadow: 0 -4rpx 12rpx rgba(0, 0, 0, 0.1);\r\n  /* #ifdef APP-PLUS || MP */\r\n  padding-bottom: env(safe-area-inset-bottom);\r\n  /* #endif */\r\n}\r\n\r\n/* 导航内容 */\r\n.tabbar-content {\r\n  width: 100%;\r\n  height: 160rpx;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 20rpx;\r\n}\r\n\r\n/* 导航项 */\r\n.tab-item {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  padding: 10rpx 10rpx 10rpx 10rpx;\r\n  transform: translateY(0);\r\n  min-height: 120rpx;\r\n}\r\n\r\n.tab-item.active {\r\n  transform: translateY(0);\r\n}\r\n\r\n/* 图标容器 */\r\n.tab-icon-container {\r\n  position: relative;\r\n  margin-bottom: 4rpx;\r\n  height: 60rpx;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.tab-item.active .tab-icon-container {\r\n  transform: scale(1);\r\n}\r\n\r\n/* 图标样式 */\r\n.tab-icon {\r\n  font-size: 44rpx;\r\n  color: #999;\r\n  display: inline-block;\r\n}\r\n\r\n.tab-icon.active {\r\n  color: #007aff;\r\n}\r\n\r\n.arrow-icon {\r\n  font-size: 60rpx !important;\r\n  font-weight: bold;\r\n  color: #ff4757 !important;\r\n}\r\n\r\n/* PNG图标样式 */\r\n.tab-icon-image {\r\n  width: 44rpx;\r\n  height: 44rpx;\r\n  transition: all 0.1s ease-out; /* 添加平滑过渡 */\r\n}\r\n\r\n.tab-icon-image.active {\r\n  transform: scale(1);\r\n}\r\n\r\n/* 特殊的AI图标样式 */\r\n.ai-special-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.ai-icon-container {\r\n  position: relative;\r\n  margin-bottom: 4rpx;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n/* 未选中时的AI图标容器 - 小尺寸 */\r\n.ai-icon-container:not(.active) {\r\n  height: 60rpx;\r\n  width: auto;\r\n}\r\n\r\n/* 选中时的AI图标容器 - 大尺寸 */\r\n.ai-icon-container.active {\r\n  height: 100rpx;\r\n  width: 140rpx;\r\n}\r\n\r\n.ai-icon-container.active {\r\n  transform: scale(1);\r\n}\r\n\r\n/* 选中时的GIF图标 - 大尺寸，铺满容器 */\r\n.ai-gif-icon {\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 12rpx;\r\n  object-fit: cover;\r\n  transition: opacity 0.1s ease-out; /* 添加平滑过渡 */\r\n}\r\n\r\n/* 未选中时的PNG图标 - 普通尺寸 */\r\n.ai-png-icon {\r\n  width: 44rpx;\r\n  height: 44rpx;\r\n  transition: all 0.1s ease-out; /* 添加平滑过渡 */\r\n}\r\n\r\n/* 热点动画 - 旋转 + 脉冲 */\r\n.hotspot-animation {\r\n  animation: hotspotAnimation 0.24s ease-in-out;\r\n}\r\n\r\n@keyframes hotspotAnimation {\r\n  0% {\r\n    transform: scale(1) rotate(0deg);\r\n  }\r\n  25% {\r\n    transform: scale(1.2) rotate(90deg);\r\n  }\r\n  50% {\r\n    transform: scale(1.1) rotate(180deg);\r\n  }\r\n  75% {\r\n    transform: scale(1.2) rotate(270deg);\r\n  }\r\n  100% {\r\n    transform: scale(1) rotate(360deg);\r\n  }\r\n}\r\n\r\n/* 聊天动画 - 弹跳 + 震动 */\r\n.chat-animation {\r\n  animation: chatAnimation 0.24s ease-in-out;\r\n}\r\n\r\n@keyframes chatAnimation {\r\n  0% {\r\n    transform: translateY(0) scale(1);\r\n  }\r\n  20% {\r\n    transform: translateY(-8rpx) scale(1.1);\r\n  }\r\n  40% {\r\n    transform: translateY(0) scale(1.05);\r\n  }\r\n  60% {\r\n    transform: translateY(-4rpx) scale(1.1);\r\n  }\r\n  80% {\r\n    transform: translateY(0) scale(1.05);\r\n  }\r\n  100% {\r\n    transform: translateY(0) scale(1);\r\n  }\r\n}\r\n\r\n/* 用户动画 - 心跳 + 颜色变换 */\r\n.user-animation {\r\n  animation: userAnimation 0.24s ease-in-out;\r\n}\r\n\r\n@keyframes userAnimation {\r\n  0% {\r\n    transform: scale(1);\r\n    filter: hue-rotate(0deg);\r\n  }\r\n  25% {\r\n    transform: scale(1.3);\r\n    filter: hue-rotate(90deg);\r\n  }\r\n  50% {\r\n    transform: scale(1.1);\r\n    filter: hue-rotate(180deg);\r\n  }\r\n  75% {\r\n    transform: scale(1.3);\r\n    filter: hue-rotate(270deg);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n    filter: hue-rotate(360deg);\r\n  }\r\n}\r\n\r\n/* 文字样式 */\r\n.tab-text {\r\n  font-size: 16rpx;\r\n  color: #999;\r\n  text-align: center;\r\n  margin-top: 2rpx;\r\n}\r\n\r\n.tab-text.active {\r\n  color: #ff4757;\r\n  font-weight: 500;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/* H5端适配 */\r\n/* #ifdef H5 */\r\n.custom-tabbar {\r\n  height: 80px;\r\n}\r\n\r\n.tab-view {\r\n  bottom: 80px !important;\r\n}\r\n\r\n.tabbar-content {\r\n  height: 80px;\r\n}\r\n\r\n.tab-item {\r\n  padding: 5px 5px 5px 5px;\r\n  min-height: 60px;\r\n}\r\n\r\n.tab-icon {\r\n  font-size: 22px;\r\n}\r\n\r\n.tab-icon-image {\r\n  width: 22px;\r\n  height: 22px;\r\n}\r\n\r\n.tab-icon-container {\r\n  height: 30px;\r\n  margin-bottom: 2px;\r\n}\r\n\r\n/* 未选中时的AI图标容器 - 小尺寸 */\r\n.ai-icon-container:not(.active) {\r\n  margin-bottom: 2px;\r\n  height: 30px;\r\n  width: auto;\r\n}\r\n\r\n/* 选中时的AI图标容器 - 大尺寸 */\r\n.ai-icon-container.active {\r\n  margin-bottom: 2px;\r\n  height: 50px;\r\n  width: 70px;\r\n}\r\n\r\n.ai-gif-icon {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.ai-png-icon {\r\n  width: 22px;\r\n  height: 22px;\r\n}\r\n\r\n.arrow-icon {\r\n  font-size: 30px !important;\r\n}\r\n\r\n.tab-text {\r\n  font-size: 8px;\r\n}\r\n\r\n/* #endif */\r\n</style> ","import MiniProgramPage from 'D:/IdeaPro/HBuilderProjects/custom-tabbar/pages/main-container/main-container.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}